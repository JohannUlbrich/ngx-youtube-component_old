{
  "version": 3,
  "file": "ngx-youtube-component.umd.min.js",
  "sources": [
    "ng://ngx-youtube-component/out/src/youtube.api.service.ts",
    "ng://ngx-youtube-component/out/src/youtube.component.ts",
    "ng://ngx-youtube-component/out/src/youtube.module.ts"
  ],
  "sourcesContent": [
    "import { Injectable, NgZone } from '@angular/core';\r\nimport {} from '@types/youtube';\r\n\r\nconst getWindow = () => window;\r\n\r\n@Injectable()\r\nexport class YoutubeApiService {\r\n  private _window: any;\r\n\r\n  private iframeApi: Promise<any>;\r\n\r\n  constructor(private zone: NgZone) {\r\n    this._window = getWindow();\r\n  }\r\n\r\n  public getIframeApi(): Promise<any> {\r\n    if (!this.iframeApi) {\r\n      this.loadIframeApi();\r\n    }\r\n\r\n    return this.iframeApi;\r\n  }\r\n\r\n  private loadIframeApi(): void {\r\n    this.iframeApi = new Promise(resolve => {\r\n      const scriptTag = this._window.document.createElement('script');\r\n      scriptTag.src = 'https://www.youtube.com/iframe_api';\r\n      this._window.document.body.appendChild(scriptTag);\r\n\r\n      // The IFrame Player API will call this function when the page has finished downloading the JavaScript for the player API\r\n      this._window['onYouTubeIframeAPIReady'] = () => {\r\n        resolve(this._window['YT']);\r\n      };\r\n    });\r\n  }\r\n}\r\n",
    "import {\r\n  Component,\r\n  OnInit,\r\n  OnDestroy,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ElementRef\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { YoutubeApiService } from './youtube.api.service';\r\nimport {} from '@types/youtube';\r\n\r\n@Component({\r\n  selector: 'youtube',\r\n  template: ''\r\n})\r\nexport class YoutubeComponent implements OnInit, OnDestroy {\r\n  @Input() width: number;\r\n  @Input() height: number;\r\n  @Input() videoId: string;\r\n  @Input() playerVars: YT.PlayerVars;\r\n  @Input() events: YT.Events;\r\n  @Output() iframeAPIReady: EventEmitter<String> = new EventEmitter<String>();\r\n\r\n  private player: YT.Player;\r\n\r\n  constructor(\r\n    private youtubeApiService: YoutubeApiService,\r\n    private playerElement: ElementRef\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    const playerOptions: YT.PlayerOptions = {};\r\n\r\n    if (this.width !== undefined) {\r\n      playerOptions.width = this.width;\r\n    }\r\n\r\n    if (this.height !== undefined) {\r\n      playerOptions.height = this.height;\r\n    }\r\n\r\n    if (this.videoId !== undefined) {\r\n      playerOptions.videoId = this.videoId;\r\n    }\r\n\r\n    if (this.playerVars !== undefined) {\r\n      playerOptions.playerVars = this.playerVars;\r\n    }\r\n\r\n    if (this.events !== undefined) {\r\n      playerOptions.events = {};\r\n\r\n      Object.keys(this.events).forEach(eventListenerName => {\r\n        if (this.events.hasOwnProperty(eventListenerName)) {\r\n          const eventListener = this.events[eventListenerName];\r\n          const subject = new Subject<any>();\r\n\r\n          playerOptions.events[eventListenerName] = event =>\r\n            subject.next(event);\r\n          subject.subscribe(eventListener);\r\n        }\r\n      });\r\n    }\r\n\r\n    this.youtubeApiService.getIframeApi().then(success => {\r\n      this.iframeAPIReady.emit(success);\r\n      this.player = new success.Player(\r\n        this.playerElement.nativeElement,\r\n        playerOptions\r\n      );\r\n\r\n      return this.player;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // TODO: unsubscribe\r\n  }\r\n}\r\n",
    "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { YoutubeApiService } from './youtube.api.service';\r\nimport { YoutubeComponent } from './youtube.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  providers: [YoutubeApiService],\r\n  declarations: [YoutubeComponent],\r\n  exports: [YoutubeComponent]\r\n})\r\nexport class YoutubeModule {}\r\n"
  ],
  "names": [
    "getWindow",
    "window",
    "YoutubeApiService",
    "zone",
    "this",
    "_window",
    "prototype",
    "getIframeApi",
    "iframeApi",
    "loadIframeApi",
    "_this",
    "Promise",
    "resolve",
    "scriptTag",
    "document",
    "createElement",
    "src",
    "body",
    "appendChild",
    "type",
    "Injectable",
    "NgZone",
    "YoutubeComponent",
    "youtubeApiService",
    "playerElement",
    "iframeAPIReady",
    "EventEmitter",
    "ngOnInit",
    "playerOptions",
    "width",
    "undefined",
    "height",
    "videoId",
    "playerVars",
    "events",
    "Object",
    "keys",
    "forEach",
    "eventListenerName",
    "hasOwnProperty",
    "eventListener",
    "subject_1",
    "Subject",
    "event",
    "next",
    "subscribe",
    "then",
    "success",
    "emit",
    "player",
    "Player",
    "nativeElement",
    "ngOnDestroy",
    "Component",
    "args",
    "selector",
    "template",
    "ElementRef",
    "Input",
    "Output",
    "YoutubeModule",
    "NgModule",
    "imports",
    "CommonModule",
    "providers",
    "declarations",
    "exports"
  ],
  "mappings": "iYAAA,IAGMA,EAAY,WAAM,OAAAC,QAGxBC,EAAA,WAKE,SAAFA,EAAsBC,GAAAC,KAAtBD,KAAsBA,EAClBC,KAAKC,QAAUL,WAGVE,EAATI,UAAAC,aAAS,WAKL,OAJKH,KAAKI,WACRJ,KAAKK,gBAGAL,KAAKI,WAGNN,EAAVI,UAAAG,cAAU,WAAA,IAAVC,EAAAN,KACIA,KAAKI,UAAY,IAAIG,QAAQ,SAAAC,GAC3B,IAAMC,EAAYH,EAAKL,QAAQS,SAASC,cAAc,UACtDF,EAAUG,IAAM,qCAChBN,EAAKL,QAAQS,SAASG,KAAKC,YAAYL,GAGvCH,EAAKL,QAAiC,wBAAI,WACxCO,EAAQF,EAAKL,QAAY,UAzBjC,iBADA,CAAAc,KAACC,EAAAA,gDALD,CAAAD,KAAqBE,EAAAA,UCArB,IAAAC,EAAA,WA4BE,SAAFA,EACYC,EACAC,GADApB,KAAZmB,kBAAYA,EACAnB,KAAZoB,cAAYA,EANZpB,KAAAqB,eAAmD,IAAIC,EAAAA,oBASrDJ,EAAFhB,UAAAqB,SAAE,WAAA,IAAFjB,EAAAN,KACUwB,EAAkC,GAEpCxB,KAAKyB,QAAUC,YACjBF,EAAcC,MAAQzB,KAAKyB,OAGzBzB,KAAK2B,SAAWD,YAClBF,EAAcG,OAAS3B,KAAK2B,QAG1B3B,KAAK4B,UAAYF,YACnBF,EAAcI,QAAU5B,KAAK4B,SAG3B5B,KAAK6B,aAAeH,YACtBF,EAAcK,WAAa7B,KAAK6B,YAG9B7B,KAAK8B,SAAWJ,YAClBF,EAAcM,OAAS,GAEvBC,OAAOC,KAAKhC,KAAK8B,QAAQG,QAAQ,SAAAC,GAC/B,GAAI5B,EAAKwB,OAAOK,eAAeD,GAAoB,CACjD,IAAME,EAAgB9B,EAAKwB,OAAOI,GAC5BG,EAAU,IAAIC,EAAAA,QAEpBd,EAAcM,OAAOI,GAAqB,SAAAK,GACxC,OAAAF,EAAQG,KAAKD,IACfF,EAAQI,UAAUL,OAKxBpC,KAAKmB,kBAAkBhB,eAAeuC,KAAK,SAAAC,GAOzC,OANArC,EAAKe,eAAeuB,KAAKD,GACzBrC,EAAKuC,OAAS,IAAIF,EAAQG,OACxBxC,EAAKc,cAAc2B,cACnBvB,GAGKlB,EAAKuC,UAIhB3B,EAAFhB,UAAA8C,YAAE,eA9EF,iBAcA,CAAAjC,KAACkC,EAAAA,UAADC,KAAA,CAAW,CACTC,SAAU,UACVC,SAAU,0CALZ,CAAArC,KAASjB,GAJT,CAAAiB,KAAEsC,EAAAA,gCAYF5B,MAAA,CAAA,CAAAV,KAAGuC,EAAAA,QACH3B,OAAA,CAAA,CAAAZ,KAAGuC,EAAAA,QACH1B,QAAA,CAAA,CAAAb,KAAGuC,EAAAA,QACHzB,WAAA,CAAA,CAAAd,KAAGuC,EAAAA,QACHxB,OAAA,CAAA,CAAAf,KAAGuC,EAAAA,QACHjC,eAAA,CAAA,CAAAN,KAAGwC,EAAAA,UCxBH,IAAAC,EAAA,2BAKA,CAAAzC,KAAC0C,EAAAA,SAADP,KAAA,CAAU,CACRQ,QAAS,CAACC,EAAAA,cACVC,UAAW,CAAC9D,GACZ+D,aAAc,CAAC3C,GACf4C,QAAS,CAAC5C"
}
