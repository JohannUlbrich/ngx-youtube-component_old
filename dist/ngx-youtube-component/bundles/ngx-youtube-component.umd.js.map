{
  "version": 3,
  "file": "ngx-youtube-component.umd.js",
  "sources": [
    "ng://ngx-youtube-component/out/src/youtube.module.ts",
    "ng://ngx-youtube-component/out/src/youtube.component.ts",
    "ng://ngx-youtube-component/out/src/youtube.api.service.ts"
  ],
  "sourcesContent": [
    "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { YoutubeApiService } from './youtube.api.service';\r\nimport { YoutubeComponent } from './youtube.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  providers: [YoutubeApiService],\r\n  declarations: [YoutubeComponent],\r\n  exports: [YoutubeComponent]\r\n})\r\nexport class YoutubeModule {}\r\n",
    "import {\r\n  Component,\r\n  OnInit,\r\n  OnDestroy,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ElementRef\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { YoutubeApiService } from './youtube.api.service';\r\nimport {} from '@types/youtube';\r\n\r\n@Component({\r\n  selector: 'youtube',\r\n  template: ''\r\n})\r\nexport class YoutubeComponent implements OnInit, OnDestroy {\r\n  @Input() width: number;\r\n  @Input() height: number;\r\n  @Input() videoId: string;\r\n  @Input() playerVars: YT.PlayerVars;\r\n  @Input() events: YT.Events;\r\n  @Output() iframeAPIReady: EventEmitter<String> = new EventEmitter<String>();\r\n\r\n  private player: YT.Player;\r\n\r\n  constructor(\r\n    private youtubeApiService: YoutubeApiService,\r\n    private playerElement: ElementRef\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    const playerOptions: YT.PlayerOptions = {};\r\n\r\n    if (this.width !== undefined) {\r\n      playerOptions.width = this.width;\r\n    }\r\n\r\n    if (this.height !== undefined) {\r\n      playerOptions.height = this.height;\r\n    }\r\n\r\n    if (this.videoId !== undefined) {\r\n      playerOptions.videoId = this.videoId;\r\n    }\r\n\r\n    if (this.playerVars !== undefined) {\r\n      playerOptions.playerVars = this.playerVars;\r\n    }\r\n\r\n    if (this.events !== undefined) {\r\n      playerOptions.events = {};\r\n\r\n      Object.keys(this.events).forEach(eventListenerName => {\r\n        if (this.events.hasOwnProperty(eventListenerName)) {\r\n          const eventListener = this.events[eventListenerName];\r\n          const subject = new Subject<any>();\r\n\r\n          playerOptions.events[eventListenerName] = event =>\r\n            subject.next(event);\r\n          subject.subscribe(eventListener);\r\n        }\r\n      });\r\n    }\r\n\r\n    this.youtubeApiService.getIframeApi().then(success => {\r\n      this.iframeAPIReady.emit(success);\r\n      this.player = new success.Player(\r\n        this.playerElement.nativeElement,\r\n        playerOptions\r\n      );\r\n\r\n      return this.player;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // TODO: unsubscribe\r\n  }\r\n}\r\n",
    "import { Injectable, NgZone } from '@angular/core';\r\nimport {} from '@types/youtube';\r\n\r\nconst getWindow = () => window;\r\n\r\n@Injectable()\r\nexport class YoutubeApiService {\r\n  private _window: any;\r\n\r\n  private iframeApi: Promise<any>;\r\n\r\n  constructor(private zone: NgZone) {\r\n    this._window = getWindow();\r\n  }\r\n\r\n  public getIframeApi(): Promise<any> {\r\n    if (!this.iframeApi) {\r\n      this.loadIframeApi();\r\n    }\r\n\r\n    return this.iframeApi;\r\n  }\r\n\r\n  private loadIframeApi(): void {\r\n    this.iframeApi = new Promise(resolve => {\r\n      const scriptTag = this._window.document.createElement('script');\r\n      scriptTag.src = 'https://www.youtube.com/iframe_api';\r\n      this._window.document.body.appendChild(scriptTag);\r\n\r\n      // The IFrame Player API will call this function when the page has finished downloading the JavaScript for the player API\r\n      this._window['onYouTubeIframeAPIReady'] = () => {\r\n        resolve(this._window['YT']);\r\n      };\r\n    });\r\n  }\r\n}\r\n"
  ],
  "names": [
    "CommonModule",
    "NgModule",
    "Output",
    "Input",
    "ElementRef",
    "Component",
    "Subject",
    "EventEmitter",
    "NgZone",
    "Injectable"
  ],
  "mappings": "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"
}
